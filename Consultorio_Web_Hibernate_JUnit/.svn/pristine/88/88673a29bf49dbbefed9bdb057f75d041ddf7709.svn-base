package modelo.DAO;


import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

import org.hibernate.Session;


public class ConnectionFactory {

	/*private static String usuario = "sa";
    private static String senha = "";
    private static String url = "jdbc:h2:tcp://localhost/~/consultorio;AUTO_SERVER=FALSE";//"jdbc:h2:~/consultorio;AUTO_SERVER=FALSE";
    private static String driver = "org.h2.Driver";
	private static ThreadLocal<Connection> local = new ThreadLocal<Connection>();*/
	
	protected EntityManagerFactory factory;
	protected EntityManager manager;
	
	public ConnectionFactory() {
		 factory = Persistence.createEntityManagerFactory ("Consultorio_Web");
		 manager = factory.createEntityManager ();
	}
	
	
	public static Session getConnection() {
			
		/*// Objeto que contém as configurações do hibernate
	    Configuration cfg = new AnnotationConfiguration();
	
	    // Configura o objeto com o conteúdo do hibernate.cfg.xml
	    cfg.configure("/conf/hibernate.cfg.xml");
	
	    // Instância uma SessionFactory
	    SessionFactory sf = cfg.buildSessionFactory();
	
	    // Abre uma sessão com o Hibernate
	    session = sf.openSession();*/
	    
	    //factory = Persistence.createEntityManagerFactory ("Consultorio_Web");
	    //manager = factory.createEntityManager ();
	   
	    

	    
	    /** RETIRAR O CÓDIGO A PARTIR DAQUI 
	    try { 
			if (local.get() == null || local.get().isClosed()) {
				Class.forName(driver);
				local.set(DriverManager.getConnection(url, usuario, senha));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return local.get();*/
		return null;
	
	}
}




