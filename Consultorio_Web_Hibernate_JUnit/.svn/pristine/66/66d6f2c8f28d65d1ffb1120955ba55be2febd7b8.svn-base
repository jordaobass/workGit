package modelo.dao;


import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import modelo.Endereco;
import modelo.NomePlano;
import modelo.Paciente;
import modelo.Plano;
import modelo.Telefone;
import modelo.TipoTelefone;


import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;

public class PlanoDAOTest {

	private static PlanoDAO dao;
	private static PacienteDAO pacientedao;
	
	@BeforeClass
	public static void init(){
		dao = new PlanoDAO();
		pacientedao = new PacienteDAO();
	}
	
	@AfterClass
	public static void finish(){
		dao.close();
		pacientedao.close();
	}
	
	@Test
	public void cadastrarUmPlano(){
		
		try {
			Paciente paciente = new Paciente();
			paciente.setCpf("52280328860");
			paciente.setNome("Homem Teste Plano");
			
			paciente.setEndereco(new Endereco());
			paciente.getEndereco().setCep("03355010");
			pacientedao.cadastrar(paciente);
			
			Plano plano = new Plano();
			//plano.setId(1L);
			plano.setDataValidade(new Date());
			plano.setNome(NomePlano.AMIL);
			paciente.getPlanos().add(plano);
			
			pacientedao.alterar(paciente);
			
						
		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}
	}
		
	@Test	
	public void cadastrarDoisPlanos(){
			
		try {
			Paciente paciente = new Paciente();
			paciente.setCpf("12345678985");
			paciente.setNome("Homem Teste Plano");
				
			paciente.setEndereco(new Endereco());
			paciente.getEndereco().setCep("03355010");
			pacientedao.cadastrar(paciente);
				
			Plano plano = new Plano();
			plano.setDataValidade(new Date());
			plano.setNome(NomePlano.ASSIM);
			paciente.getPlanos().add(plano);
				
			Plano plano2 = new Plano();
			plano2.setDataValidade(new Date());
			plano2.setNome(NomePlano.UNIMED);
			paciente.getPlanos().add(plano2);
				
			pacientedao.alterar(paciente);
				
							
		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}		
	}
	
	@Test
	public void excluirPlano() {

		try {

			Paciente paciente = pacientedao.consultarPacientePorCPF("52280328860");
			Assert.assertNotNull(paciente);

			Plano plano2 = new Plano();
			plano2.setDataValidade(new Date());
			plano2.setNome(NomePlano.UNIMED);
			paciente.getPlanos().add(plano2);
				
			pacientedao.alterar(paciente);
			paciente.getPlanos().remove(0);
			pacientedao.alterar(paciente);

		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}

	}
	
	@Test
	public void excluirTodosPlanos() {

		try {

			Paciente paciente = pacientedao.consultarPacientePorCPF("52280328860");
			Assert.assertNotNull(paciente);

			Plano plano = new Plano();
			plano.setDataValidade(new Date());
			plano.setNome(NomePlano.ASSIM);
			paciente.getPlanos().add(plano);
			
			Plano plano2 = new Plano();
			plano2.setDataValidade(new Date());
			plano2.setNome(NomePlano.AMIL);
			paciente.getPlanos().add(plano2);
				
			pacientedao.alterar(paciente);
			paciente.getPlanos().removeAll(paciente.getPlanos());
			pacientedao.alterar(paciente);

		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}

	}

}
