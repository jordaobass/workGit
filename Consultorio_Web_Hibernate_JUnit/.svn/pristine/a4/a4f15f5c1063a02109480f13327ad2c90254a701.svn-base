package modelo.dao;

import infra.PacienteFactory;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import modelo.Consulta;
import modelo.Paciente;
import modelo.Singleton;

import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;

public class ConsultaDAOTest {

	private static ConsultaDAO dao;
	private static PacienteFactory factory;
	private static PacienteDAO daoPaciente;

	@BeforeClass
	public static void init() {
		dao = new ConsultaDAO();
		daoPaciente = new PacienteDAO();
		factory = new PacienteFactory();
	}

	@AfterClass
	public static void finish() {
		dao.close();
	}

//	@Test
//	public void gerarDatas() {
//		try {
//
//			Assert.assertNotNull(Singleton.getInstance().ultimaData());
//
//		} catch (Exception e) {
//			e.printStackTrace();
//			Assert.fail(e.getMessage());
//		}
//
//	}
//
//	@Test
//	public void verificarUltimaData() {
//		List<Calendar> c = new ArrayList<Calendar>();
//		try {
//			c.add(Singleton.getInstance().ultimaData());
//			Assert.assertEquals(c.size(), 1);
//		} catch (Exception e) {
//			e.printStackTrace();
//			Assert.fail(e.getMessage());
//		}
//
//	}

	@Test
	public void getData(){
		
		List<Date> aux = new ArrayList<Date>();
		Consulta consulta = new Consulta();
		Calendar dataCalendar = Calendar.getInstance();
		Date date = new Date();
		
		try {
			for (int i = 0; i < 2; i++) {

				dataCalendar.add(Calendar.DAY_OF_MONTH, 1);
				dataCalendar.set(Calendar.HOUR_OF_DAY, 8);
				dataCalendar.set(Calendar.MINUTE, 0);
				dataCalendar.set(Calendar.SECOND, 0);

				
				
				for (int j = 0; j < 6; j++) {
					
					dataCalendar.add(Calendar.HOUR_OF_DAY, 1);
				
					String dataFormatada = Singleton.getInstance().sdf().format(dataCalendar.getTime());

					date = Singleton.getInstance().sdf().parse(dataFormatada);

				//	Singleton.getInstance().setTd(new Timestamp(date.getTime()));

					aux.add(date);

				}
			}
			consulta.setListaDataDisponivel(aux);
		
			Singleton.getInstance().cadastrarDataDisponivelAgendada(consulta.getListaDataDisponivel());
			
			Assert.assertNotNull(Singleton.getInstance().getLista());
			
		}  catch (Exception e) {

			System.out.println(e.getMessage());
			Assert.fail(e.getMessage());
		}

	}
		
	// @Test
	// public void cadastrarUmaConsulta() {
	//
	// try {
	//
	// Consulta consulta = new Consulta();
	// consulta.setDataConsulta(new Date());
	//
	// Paciente paciente = factory.criaPacientes(1);
	// consulta.setPaciente(paciente);
	// daoPaciente.cadastrar(paciente);
	// consulta.setTipoConsulta("Particular");
	//
	// dao.cadastrarConsulta(consulta, paciente);
	// } catch (Exception e) {
	// e.printStackTrace();
	// Assert.fail(e.getMessage());
	// }
	//
	// }
	//
	// @Test
	// public void listarConsultas() {
	// try {
	//
	// // dao.cadastrarConsulta(factory.criarConsulta(1),
	// // factory.criaPacientes(1));
	//
	// List<Consulta> consultas = dao.getConsultas(factory.criaPacientes(1));
	//
	// Assert.assertTrue(!consultas.isEmpty());
	// Assert.assertEquals(1, consultas.size());
	// for (Consulta consulta : consultas) {
	// System.out.println(consulta.getPaciente().getCpf());
	// }
	// } catch (Exception e) {
	// e.printStackTrace();
	// Assert.fail(e.getMessage());
	// }
	//
	// }
	//
	// @Test
	// public void excluirUmaConsulta() {
	//
	// try {
	// dao.DesmarcarConsulta(factory.criarConsulta(1));
	//
	// } catch (SQLException e) {
	// e.printStackTrace();
	// Assert.fail(e.getMessage());
	// }
	//
	// }

}
