package modelo.dao;

import modelo.Endereco;
import modelo.Paciente;
import modelo.Telefone;
import modelo.TipoTelefone;
import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;

public class PacienteDAOTest {

	private static ConsultorioService cs;

	@BeforeClass
	public static void init() {
		cs = ConsultorioService.getInstance();
	}

	@AfterClass
	public static void finish() {
		//dao.close();
	}

	@Test
	public void cadastrarUmPaciente() {

		try {

			// primeiro
			Paciente paciente = new Paciente();
			paciente.setCpf("12613515090");
			paciente.setNome("Homem Teste");

			paciente.setEndereco(new Endereco());
			paciente.getEndereco().setCep("24220111");

			cs.cadastrar(paciente);
		} catch (Exception e) {
			Assert.fail(e.getMessage());
		}
	}

	@Test
	public void cadastrarDoisPaciente() {

		try {

			// segundo
			Paciente paciente = new Paciente();
			paciente.setCpf("08100782288");
			paciente.setNome("Homem Teste Dois");

			paciente.setEndereco(new Endereco());
			paciente.getEndereco().setCep("24240070");

			cs.cadastrar(paciente);

			// Terceiro
			paciente = new Paciente();
			paciente.setCpf("83415221440");
			paciente.setNome("Homem Teste TrÃªs");

			paciente.setEndereco(new Endereco());
			paciente.getEndereco().setCep("20770240");

			cs.cadastrar(paciente);
		} catch (Exception e) {
			Assert.fail(e.getMessage());
		}

	}

	@Test
	public void consultarTodosPacientes() {

		try {
			Paciente paciente = new Paciente();
			paciente.setCpf("12613515090");
			paciente.setNome("Homem Teste");

			paciente.setEndereco(new Endereco());
			paciente.getEndereco().setCep("24220111");

			Assert.assertEquals(cs.listarTodosPacientes().size(), 3);
		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}
	}

	@Test
	public void consultarPacientePorCpf() {

		try {
			Paciente paciente = new Paciente();
			paciente.setCpf("12613515090");
			paciente.setNome("Homem Teste");

			paciente.setEndereco(new Endereco());
			paciente.getEndereco().setCep("24220111");

			Assert.assertNotNull(cs.consultarPacientePorCPF(paciente.getCpf()));
		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}
	}

	@Test
	public void cadastrarTelefone() {

		try {
			Paciente paciente = new Paciente();
			paciente.setCpf("52280328860");
			paciente.setNome("Homem Teste Telefone");

			paciente.setEndereco(new Endereco());
			paciente.getEndereco().setCep("03355010");

			cs.cadastrar(paciente);

			Telefone novo = new Telefone();
			novo.setNumero("2188888888");
			novo.setTipo(TipoTelefone.RESIDENCIAL);
			paciente.getTelefones().add(novo);

			cs.alterar(paciente);
		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}

	}

	@Test
	public void excluirTelefone() {

		try {

			Paciente paciente = cs.consultarPacientePorCPF("52280328860");
			Assert.assertNotNull(paciente);

			Telefone novo = new Telefone();
			novo.setNumero("2199999999");
			novo.setTipo(TipoTelefone.CELULAR);

			paciente.getTelefones().add(novo);

			cs.alterar(paciente);
			paciente.getTelefones().remove(0);
			cs.alterar(paciente);

		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}

	}

	@Test
	public void alterarPaciente() {

		try {
			Paciente paciente = cs.consultarPacientePorCPF("52280328860");
			Assert.assertNotNull(paciente);

			paciente.setCpf("55380325860");
			paciente.setNome("Mulher");

			cs.alterar(paciente);
		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}

	}
	
	
	@Test
	public void excluirPaciente() {

		try {
			Paciente paciente = cs.consultarPacientePorCPF("55380325860");
			Assert.assertNotNull(paciente);

			cs.excluir(paciente);

		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}

	}
	
	@Test
	public void alterarPacienteSingleton() {

		try {
			Paciente paciente = cs.consultarPacientePorCPF("12613515090");
			Assert.assertNotNull(paciente);

			paciente.setCpf("55480325860");
			paciente.setNome("MulherSingleton");

			ConsultorioService.getInstance().alterar(paciente);
		} catch (Exception e) {
			e.printStackTrace();
			Assert.fail(e.getMessage());
		}

	}
}
